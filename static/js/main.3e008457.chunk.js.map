{"version":3,"sources":["images/cc-banner.png","images/ag-overview-info-2.png","images/ag-ideation-sketches.png","images/ag-prototype-a.png","images/ag-prototype-b.png","images/ag-usertesting-1.png","images/ag-usertesting-2.png","images/ag-final-product.png","images/cc-frame-set-a.png","images/cc-frame-set-b.png","images/cc-frame-set-c.png","images/cc-google-analytics.png","images/cc-storyboard-1.png","images/cc-storyboard-2.png","images/cc-ucsd-career-fair.jpg","images/cc-user-testing-flow.png","images/cc-final-design.png","images/cc-final-phone.jpg","images/arrow.svg","images/project2_avant-garde.png","images/project3_informed-banner.png","images/right-arrow.svg","images/instagram-icon.svg","images/github-icon.svg","images/linkedin-icon.svg","images/logo.svg","images/twitter-icon.svg","images/resume_coraxyc_2020.pdf","images/ag-banner.png","images/cc-template-styles.gif","components/HeaderSection.js","components/ProjectSection.js","components/AboutSection.js","components/CoffeeSection.js","components/FooterSection.js","components/SideNavbar.js","components/HiddenMobile.js","components/Home.js","components/projects/AvantGarde.js","components/projects/CardConnect.js","components/projects/Informed.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","HeaderSection","react_default","a","createElement","className","id","lib","smooth","to","src","arrow","alt","Component","ProjectSection","react_router_dom","CardConnectDisplay","AvantGardeDisplay","InformedDisplay","WorkSection","CoffeeSection","href","target","rightArrow","FooterSection","SideNavbar","logo","resume","rel","githubIcon","linkedinIcon","twitterIcon","instagramIcon","HiddenMobile","Home","Fragment","components_SideNavbar","components_HeaderSection","components_ProjectSection","AboutSection","components_CoffeeSection","components_FooterSection","components_HiddenMobile","images","AGOverviewInfo","AGIdeationSketches","AGPrototypeA","AGPrototypeB","AGUserTesting1","AGUserTesting2","AGFinalProduct","AvantGarde","props","_this","Object","classCallCheck","this","_super","call","state","photoIndex","isLightboxOpen","isVersionAOpen","isVersionBOpen","isRound2Open","item","setState","_this2","_this$state","index_es","mainSrc","nextSrc","length","prevSrc","onCloseRequest","onMovePrevRequest","onMoveNextRequest","AGBanner","onClick","toggleCollapse","CCCareerFair","CCStoryboard1","CCStoryboard2","CCFrameSetA","CCFrameSetB","CCFrameSetC","CCUserTestingFlow","CCGoogleAnalytics","CCFinalDesign","CCFinalPhone","CardConnect","CCBanner","width","height","frameborder","allow","allowfullscreen","CCTemplateStyles","createHistory","listen","location","ReactGA","set","page","pathname","pageview","App","useEffect","window","react_router","exact","path","component","Informed","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","initialize","render","components_App","document","getElementById","URL","process","origin","addEventListener","concat","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.3e008457.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cc-banner.5a2151d5.png\";","module.exports = __webpack_public_path__ + \"static/media/ag-overview-info-2.7d4a220d.png\";","module.exports = __webpack_public_path__ + \"static/media/ag-ideation-sketches.e7e9ec1e.png\";","module.exports = __webpack_public_path__ + \"static/media/ag-prototype-a.d432dc4f.png\";","module.exports = __webpack_public_path__ + \"static/media/ag-prototype-b.500de16b.png\";","module.exports = __webpack_public_path__ + \"static/media/ag-usertesting-1.391b6459.png\";","module.exports = __webpack_public_path__ + \"static/media/ag-usertesting-2.e28232df.png\";","module.exports = __webpack_public_path__ + \"static/media/ag-final-product.3edbb3e1.png\";","module.exports = __webpack_public_path__ + \"static/media/cc-frame-set-a.412324d4.png\";","module.exports = __webpack_public_path__ + \"static/media/cc-frame-set-b.50e54acf.png\";","module.exports = __webpack_public_path__ + \"static/media/cc-frame-set-c.925d4398.png\";","module.exports = __webpack_public_path__ + \"static/media/cc-google-analytics.45981594.png\";","module.exports = __webpack_public_path__ + \"static/media/cc-storyboard-1.d407e9e1.png\";","module.exports = __webpack_public_path__ + \"static/media/cc-storyboard-2.92f32ede.png\";","module.exports = __webpack_public_path__ + \"static/media/cc-ucsd-career-fair.199e90e2.jpg\";","module.exports = __webpack_public_path__ + \"static/media/cc-user-testing-flow.b89554bc.png\";","module.exports = __webpack_public_path__ + \"static/media/cc-final-design.033aee17.png\";","module.exports = __webpack_public_path__ + \"static/media/cc-final-phone.2a17a2f9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/arrow.b2ae64df.svg\";","module.exports = __webpack_public_path__ + \"static/media/project2_avant-garde.2aff21a8.png\";","module.exports = __webpack_public_path__ + \"static/media/project3_informed-banner.c1f71255.png\";","module.exports = __webpack_public_path__ + \"static/media/right-arrow.32ff8349.svg\";","module.exports = __webpack_public_path__ + \"static/media/instagram-icon.2714a527.svg\";","module.exports = __webpack_public_path__ + \"static/media/github-icon.d2053907.svg\";","module.exports = __webpack_public_path__ + \"static/media/linkedin-icon.d1e605cc.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.10e183f3.svg\";","module.exports = __webpack_public_path__ + \"static/media/twitter-icon.18b8573e.svg\";","module.exports = __webpack_public_path__ + \"static/media/resume_coraxyc_2020.82601acf.pdf\";","module.exports = __webpack_public_path__ + \"static/media/ag-banner.743ce621.png\";","module.exports = __webpack_public_path__ + \"static/media/cc-template-styles.0f3e57d8.gif\";","import React, { Component } from 'react'\nimport { HashLink as Link } from 'react-router-hash-link'\nimport arrow from '../images/arrow.svg'\n\nclass HeaderSection extends Component {\n    render() {\n        return (\n            <section className=\"Home\" id=\"home\">\n                <div className=\"Header-container\">\n                    <div className=\"Header-intro\">\n                        <h1 className=\"Header-intro-title\">Hi, I'm Cora.</h1>\n                        <p className=\"Header-intro-body\">\n                            I’m a visual problem solver studying Computer Science <br/>\n                            and Design at the University of California San Diego. </p>\n                        <p className=\"Header-intro-body\">\n                            I enjoy going to hackathons 👩‍💻, gazing at skyscrapers 🏙,<br/>\n                            and experimenting with typography ✍.</p>\n                        <Link smooth to=\"/#work\">\n                            <button className=\"Header-intro-button\">\n                                Explore my work\n                            </button>\n                        </Link>\n                        <br/>\n                        <Link smooth to=\"/#work\">\n                            <img src={arrow} className=\"Header-intro-arrow\" alt=\"arrow\"/>\n                        </Link>\n                    </div>\n                </div>\n            </section>\n        )\n    }\n}\n\nexport default HeaderSection","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport CardConnectDisplay from '../images/cc-banner.png'\nimport AvantGardeDisplay from '../images/project2_avant-garde.png'\nimport InformedDisplay from '../images/project3_informed-banner.png'\n\nclass ProjectSection extends Component {\n    render() {\n        return (\n            <section className=\"Work\" id=\"work\">\n                <div className=\"Work-container\">\n                    <div className=\"horizontal\">\n                    <div className=\"Work-info\">\n                        <div className=\"Work-info-container\">\n                            <Link to=\"./projects/cardconnect\">\n                                <img className=\"Work-info-image\" src={CardConnectDisplay}/>\n                            </Link>\n                            <div className=\"Work-info-text\">\n                                <p className=\"project-title\">\n                                    CardConnect\n                                </p>\n                                <p className=\"project-subtitle\">\n                                    Front-end Web Development, UI Design, UX Research\n                                </p>\n                                <p className=\"project-body\">\n                                    Digital contacts list tool that allows you to create templated business cards.\n                                </p>\n                            </div>\n                        </div>\n                        <div className=\"Work-info-container\">\n                            <Link to=\"./projects/avantgarde\">\n                                <img className=\"Work-info-image\" src={AvantGardeDisplay}/>\n                            </Link>\n                            <div className=\"Work-info-text\">\n                                <p className=\"project-title\">\n                                    Avant Garde Poster Design\n                                </p>\n                                <p className=\"project-subtitle\">\n                                    Information Design, Visual Design, UX Research\n                                </p>\n                                <p className=\"project-body\">\n                                Iterative study on grids, typography, and information organization.\n                                </p>\n                            </div>\n                        </div>\n                        <div className=\"Work-info-container\">\n                            <Link to=\"./projects/informed\">\n                                <img className=\"Work-info-image\" src={InformedDisplay}/>\n                            </Link>\n                            <div className=\"Work-info-text\">\n                                <p className=\"project-title\">\n                                    iNFORMed\n                                </p>\n                                <p className=\"project-subtitle\">\n                                    UI/UX Design, Visual Design, User Research\n                                </p>\n                                <p className=\"project-body\">\n                                    Grassroots community platform streamlining access to verified COVID-19 resources.\n                                </p>\n                            </div>\n                        </div>\n                        {/* to make big circle scroll to almost the end*/}\n                        <div className=\"margin-top-bottom-5em\"></div>\n                    </div>\n                    <div className=\"Work-title-body\">\n                        <div className=\"Work-circle\">\n                            <div className=\"Work-circle-body\">\n                                <div className=\"Work-circle-body-title\">\n                                    Projects\n                                </div>\n                                <div className=\"Work-circle-body-divider\"></div>\n                                <div className=\"Work-circle-body-text\">\n                                    Here’s a few projects that I’d like to showcase.\n                                    <br/><br/>\n                                    Tap on the images to view case studies.\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    </div>\n                </div>\n            </section>\n        )\n    }\n}\n\nexport default ProjectSection","import React, { Component } from 'react'\n\nclass WorkSection extends Component {\n    render() {\n        return (\n            <section className=\"About\" id=\"about\">\n                <div className=\"About-container\">\n                    <div className=\"About-circle\">\n                        <div className=\"About-circle-body\">\n                            <div className=\"About-circle-body-title\">\n                                Other work\n                            </div>\n                            <div className=\"About-circle-body-divider\"></div>\n                                <div className=\"circle-body-text\">\n                                    Other projects I’ve worked on, including software, design, to phototography.\n                                    <br/><br/>\n                                    Currently a work in progress.\n                                </div>\n                        </div>\n                    </div>\n                    <div className=\"About-body\">\n                        work in progress! a few links will appear here eventually\n                    </div>\n                </div>\n            </section>\n        )\n    }\n}\nexport default WorkSection","import React, { Component } from 'react'\nimport rightArrow from '../images/right-arrow.svg'\n\nclass CoffeeSection extends Component {\n    render() {\n        return (\n            <section className=\"Coffee\" id=\"coffee\">\n                <div className=\"Coffee-container container\">\n                    <div className=\"Coffee-circle\">\n                        <div className=\"Coffee-circle-body\">\n                            <div className=\"Coffee-circle-text\">\n                                Want to talk <br/>over coffee ☕️?\n                            </div>\n                            <a href=\"mailto:ycxing99@gmail.com?subject=Hi%20Cora!&body=My%20name%20is%20_____,%20and%20I'd%20like%20to%20get%20in%20touch.\" target=\"_blank\" >\n                                <button className=\"Coffee-button\">\n                                    <img src={rightArrow} className=\"Coffee-arrow\" alt=\"arrow\"/>\n                                    Sure, why not?\n                                </button>\n                            </a>\n                        </div>\n                    </div>\n                    {/*<img src={footerImages} className=\"footer-images\" alt=\"footer images\"></img>*/}\n                </div>\n            </section>\n        )\n    }\n}\nexport default CoffeeSection","import React, { Component } from 'react'\n\n\nclass FooterSection extends Component {\n    render() {\n        return (\n            <section className=\"Footer\">\n                <div className=\"center-text\">Made with <span>🍵</span> in Fremont, CA.</div>\n            </section>\n        )\n    }\n}\nexport default FooterSection","import React, { Component } from 'react'\nimport instagramIcon from '../images/instagram-icon.svg';\nimport githubIcon from '../images/github-icon.svg';\nimport linkedinIcon from '../images/linkedin-icon.svg';\nimport logo from '../images/logo.svg';\nimport twitterIcon from '../images/twitter-icon.svg';\nimport resume from '../images/resume_coraxyc_2020.pdf';\nimport { Link } from 'react-router-dom'\n\nclass SideNavbar extends Component {\n    render() {\n        return (\n            <div className=\"side-navbar\">\n                <div className=\"icon logo-icon\">\n                    <Link to=\"/\">\n                        <img src={logo} alt=\"logo\" id=\"logo\"/>\n                    </Link>\n                    coraxyc\n                </div>\n                <div className=\"bottom-icons\">\n                    <div className=\"icon\">\n                        <a href={resume} target=\"_blank\" rel=\"noopener noreferrer\">\n                            Resume\n                        </a>\n  \n                        <a href=\"#coffee\">\n                            Contact\n                        </a>\n                    </div>\n                    <div className=\"icon\">\n                        <a href=\"https://github.com/coraxyc\" target=\"_blank\" rel=\"noopener noreferrer\">\n                            <img src={githubIcon} alt=\"github-icon\" id=\"github-icon\"/>\n                        </a>\n                    </div>\n                    <div className=\"icon\">\n                        <a href=\"https://linkedin.com/in/coraxyc/\" target=\"_blank\" rel=\"noopener noreferrer\">\n                            <img src={linkedinIcon} alt=\"linkedin-icon\" id=\"linkedin-icon\"/>\n                        </a>\n                    </div>\n                    <div className=\"icon\">\n                        <a href=\"https://twitter.com/coraxyc/\" target=\"_blank\" rel=\"noopener noreferrer\">\n                            <img src={twitterIcon} alt=\"twitter-icon\" id=\"twitter-icon\"/>\n                        </a>\n                    </div>\n                    <div className=\"icon\">\n                        <a href=\"https://instagram.com/coraxyc/\" target=\"_blank\" rel=\"noopener noreferrer\">\n                            <img src={instagramIcon} alt=\"instagram-icon\" id=\"instagram-icon\"/>\n                        </a>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\nexport default SideNavbar","import React from 'react';\n\nfunction HiddenMobile() {\n    return (\n        <div className=\"text-hidden\">\n            Not ready on mobile yet. <br/> Please visit me on a big screen 💻!\n        </div>\n    );\n}\n\nexport default HiddenMobile;\n","import React from 'react'\nimport HeaderSection from './HeaderSection.js';\nimport ProjectSection from './ProjectSection.js';\nimport AboutSection from './AboutSection.js';\nimport CoffeeSection from './CoffeeSection.js';\nimport FooterSection from './FooterSection.js';\nimport SideNavBar from './SideNavbar.js';\nimport HiddenMobile from './HiddenMobile';\n\nconst Home = () => (\n  <>\n    <div className=\"mobile-hidden big-layout\">\n      <SideNavBar />\n      <div className=\"layout\">\n        \n        <HeaderSection />\n        <ProjectSection />\n        <AboutSection />\n        <CoffeeSection />\n        <FooterSection />\n      </div>\n    </div>\n    <HiddenMobile />\n  </>\n);\n\nexport default Home;\n","import React, { Component } from 'react'\nimport Lightbox from \"react-image-lightbox\"\n\nimport SideNavbar from '../SideNavbar'\nimport AGBanner from '../../images/ag-banner.png'\nimport AGOverviewInfo from '../../images/ag-overview-info-2.png'\nimport AGIdeationSketches from '../../images/ag-ideation-sketches.png'\nimport AGPrototypeA from '../../images/ag-prototype-a.png'\nimport AGPrototypeB from '../../images/ag-prototype-b.png'\nimport AGUserTesting1 from '../../images/ag-usertesting-1.png'\nimport AGUserTesting2 from '../../images/ag-usertesting-2.png'\nimport AGFinalProduct from '../../images/ag-final-product.png'\n\nimport \"react-image-lightbox/style.css\"\nimport './projects.css'\n\nconst images = [\n  AGOverviewInfo,\n  AGIdeationSketches,\n  AGPrototypeA,\n  AGPrototypeB,\n  AGUserTesting1,\n  AGUserTesting2,\n  AGFinalProduct\n]\n\nclass AvantGarde extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      photoIndex: 0,\n      isLightboxOpen: false,\n      isVersionAOpen: false,\n      isVersionBOpen: false,\n      isRound2Open: false,\n    };\n  }\n\n  toggleCollapse(item) {\n    switch(item) {\n      case 'versionA':\n        this.setState({\n          isVersionAOpen: !this.state.isVersionAOpen\n        });\n        break;\n      case 'versionB':\n        this.setState({\n          isVersionBOpen: !this.state.isVersionBOpen\n        });\n        break;\n      case 'round2':\n        this.setState({\n          isRound2Open: !this.state.isRound2Open\n        });\n        break;\n      default:\n        break;\n    }\n  }\n\n  render() {\n    const { photoIndex, isLightboxOpen } = this.state;\n    return (\n      <div className=\"big-layout\">\n        <SideNavbar />\n        { isLightboxOpen && (\n          <Lightbox\n            mainSrc={images[photoIndex]}\n            nextSrc={images[(photoIndex + 1) % images.length]}\n            prevSrc={images[(photoIndex + images.length - 1) % images.length]}\n            onCloseRequest={() => this.setState({ isLightboxOpen: false })}\n            onMovePrevRequest={() =>\n              this.setState({\n                photoIndex: (photoIndex + images.length - 1) % images.length\n              })\n            }\n            onMoveNextRequest={() =>\n              this.setState({\n                photoIndex: (photoIndex + 1) % images.length\n              })\n            }\n          />\n        )}\n        <div className=\"layout\">\n          <div className=\"gray-banner\">\n            <img className=\"banner\" src={AGBanner}/>\n          </div>\n          <div className=\"project-content\">\n            <div className=\"project-title\">The Origins of the Avant-Garde</div>\n            <div className=\"project-subtitle\">UC San Diego (DSGN 100 - Prototyping)</div>\n            <p><strong>Scope:</strong> information design, visual design, user research</p>\n            <h2 id=\"overview\">Overview</h2>\n            <p>\n              Despite having an overwhelming amount of information to share, \n              event posters that serve as splash pages have only a short amount \n              of time to capture the attention of potential attendees. \n              As a result, it can be challenging to organize information in an \n              innovative way, such as with the uncategorized text information and \n              images (from a design challenge from a class on design prototyping) \n              that I had to create a poster with, in the visual below.\n            </p>\n            \n              \n            <img className=\"project-image-full lightbox\" src={AGOverviewInfo} onClick={() => this.setState({ isLightboxOpen: true, photoIndex: 0 })}/>\n\n            <h2>The Problem</h2>\n            <p>\n              Within this design task for my class on Prototyping (DSGN 100), the problem posed was that <i><strong>users need to be able to quickly identify necessary information on a \n              poster so that they can discern whether they are interested in the poster \n              splash page content. </strong></i>\n            </p>\n            <h2>User research</h2>\n            <p>\n              To understand my target audience, I gathered insights from interviewing \n              users. In the interview process, I had users <strong> rank the sections of \n              information</strong> in order of what they believed were <strong> most to least \n              important,</strong> namely text blocks corresponding to the subjects: Event \n              title, Venue, Dates, Location, Notable speakers, and Admission, Contact, \n              Organizer, and Event support information.\n              <br/><br/>\n              I gathered these rankings together to come up with the overall consensus \n              of rankings, ordered by subject from left to right, most important to \n              least important: <strong> 1. Event title, 2. Venue, Dates, Location, 3. Sessions, \n              4. Admission, Contact, and Organizer information, 5. Notable speakers, \n              6. Event support information. </strong>\n              <br/><br/>\n              Users for the most part agreed that the title was most important, followed \n              by a mixed ranking of Venue, Dates, and Location information, so I used \n              this finding to group the three categories within the same ranking. \n              Likewise was the case for the Admission, Contact, and Organizer information. \n              I used these rankings to <strong>determine what direction the visual flow of text \n              containers should go, </strong> specifically for ordering these information blocks \n              in different sizes on the poster.\n            </p>\n            <h2>Ideation</h2>\n            <p>\n              I made multiple sketches to experiment with as many ideas for layouts as \n              I could, as shown below. I experimented with ideas, such as how much space \n              to allocate for the title, session information, and other text containers, \n              as well as how much room to leave for images.\n            </p>\n            <img className=\"project-image-full lightbox\" src={AGIdeationSketches}  onClick={() => this.setState({ isLightboxOpen: true, photoIndex: 1 })}/>\n            <h2>Prototyping</h2>\n            <p>\n              Among my sketches, I decided to move forward with <strong> two layouts </strong>taking a \n              combination of elements in my sketches that worked best (e.g. room for \n              prominent title, easy-to-follow placements of consecutive sections) to \n              create low-fidelity prototypes.\n            </p>\n            <div className=\"row\">\n              <div className=\"column-2\">\n                <h3>Prototype A</h3>\n                <img className=\"project-image-full lightbox\" src={AGPrototypeA} onClick={() => this.setState({ isLightboxOpen: true, photoIndex: 2 })}/>\n                <p>\n                  In this prototype, I experimented with a <strong> top-to-bottom visual flow, </strong>\n                  while at the same time adhering to a 10x15 grid with ¼ inch margins \n                  and ¼ inch gutters. I used Figma to create the layouts and grids, so \n                  the ¼ inch measurement translated to 20 pixels. <strong> By vertically stacking \n                  each element, a user could scan pertinent information to gauge their \n                  interest from top to bottom starting with the title. </strong>\n                </p>\n              </div>\n              <div className=\"column-2\">\n                <h3>Prototype B</h3>\n                <img className=\"project-image-full lightbox\" src={AGPrototypeB} onClick={() => this.setState({ isLightboxOpen: true, photoIndex: 3 })}/>\n                <p>\n                  In this next prototype, I experimented with both a <strong> top-to-bottom and \n                  left-to-right flow. </strong> I separated the presented information into 2 \n                  columns--one for non-session information to the left, and one specifically \n                  for session information on the right. <strong> This way, the content could be easily \n                  scanned for basic information on the event on the left column starting with \n                  the title. If a user were more interested in the content of the talks, they \n                  could continue to read the content on the right column. </strong>\n                </p>\n              </div>\n            </div>\n            \n            <h2>User Testing</h2>\n            <h3>Round 1</h3>\n            <p>\n              Using the low-fidelity text-only prototypes I had made, I conducted a first round \n              of user testing on my progress so far for both versions. I collected the feedback \n              and summarized them below. For each version in the image, areas labelled with a \n              green border and number correspond to positive feedback, whereas areas labelled \n              with a red border and number indicate areas that users didn’t like, as explained \n              below the image.\n            </p>\n            <img className=\"project-image-full lightbox\" src={AGUserTesting1} onClick={() => this.setState({ isLightboxOpen: true, photoIndex: 4 })}/>\n            <button onClick={() => this.toggleCollapse('versionA')}>\n            {(this.state.isVersionAOpen ? 'Hide' : 'View') + \" Version A Feedback (left)\"}\n            </button>\n            \n            <div className=\"collapse\">\n            <div className={\"row\" + (this.state.isVersionAOpen ? '' : ' invisible')}>\n              <div className=\"column-2\">\n                <p className=\"positive\">Positive feedback (green)</p>\n                <ol>\n                  <li>Easy to follow flow from title down to other sections of poster.</li>\n                  <li>Alignment for session containers makes session information well categorized.</li>\n                  <li>Bolded and large first words of each text container make it easy to tell the subject.</li>\n                </ol>\n              </div>\n              <div className=\"column-2\">\n                <p className=\"negative\">Areas for improvement (red)</p>\n                <ol>\n                  <li>List of names could use more margin above the section.</li>\n                  <li>(Enlargened) Session information alignment seems inconsistent.</li>\n                  <li>There’s a noticeable patch of whitespace.</li>\n                </ol>\n              </div>\n            </div>\n            </div>\n            <button onClick={() => this.toggleCollapse('versionB')}>\n              {(this.state.isVersionBOpen ? 'Hide' : 'View') + \" Version B Feedback (right)\"}\n            </button>\n            <div className={\"row\" + (this.state.isVersionBOpen ? '' : ' invisible')}>\n              <div className=\"column-2\">\n                <p className=\"positive\">Positive feedback (green)</p>\n                <ol>\n                  <li>Clear distinction between event description on right and session information on the right.</li>\n                  <li>Easy to spot at a distance individual sessions.</li>\n                  <li>Event information is collected in one place.</li>\n                </ol>\n              </div>\n              <div className=\"column-2\">\n                <p className=\"negative\">Areas for improvement (red)</p>\n                <ol>\n                  <li>Alignment of times is uneven and jarring.</li>\n                  <li>Shifted alignment for the subtitles is confusing and uncomfortable to follow.</li>\n                  <li>Center alignment for the “generous support” text container is odd.</li>\n                </ol>\n              </div>\n            </div>\n            <h3>Round 2</h3>\n            <p>\n              With both the positive and negative feedback I received, I set out to apply the \n              results of my first round of user testing to the next stage, while adding in \n              images. I chose to continue with Version B because <strong> users indicated that they \n              preferred the benefit of being easily able to distinguish between the event \n              information and the session information through the left and right columns. </strong>\n              After coming up with the result on the left side of the image below, I \n              conducted a second round of user testing for more insights on what users saw \n              in the new version. The new feedback is summarized below.\n            </p>\n            <img className=\"project-image-full lightbox\" src={AGUserTesting2} onClick={() => this.setState({ isLightboxOpen: true, photoIndex: 5 })}/>\n            <button onClick={() => this.toggleCollapse('round2')}>\n              {(this.state.isRound2Open ? 'Hide' : 'View') + \" Feedback\"}\n            </button>\n            <div className={\"row\" + (this.state.isRound2Open ? '' : ' invisible')}>\n              <div className=\"column-2\">\n                <p className=\"positive\">Positive feedback (green)</p>\n                <ol>\n                  <li>Blue versus black text color makes it easy to distinguish session title and necessary information to attend the session with.\n    </li>\n                  <li>Nonbolded text for time and bolded text for speaker names in subsections for sessions facilitates ease of differentiation of information.</li>\n                </ol>\n              </div>\n              <div className=\"column-2\">\n                <p className=\"negative\">Areas for improvement (red)</p>\n                <ol>\n                  <li>Alignment of title is hard to trace with eyes as title words are sectioned off with different sizes.</li>\n                  <li>Hard to spot location and date of event in hidden area of image.</li>\n                  <li>Additional images and drop shadow add confusion to the visual hierarchy.</li>\n                  <li>Session location and date compacted together adds difficulty for the viewer to notice that the last session is in a different location than all other sessions. Date is also confusing with the session number beside it (e.g. session 2 is on February 2 but session 3 is on February 3).\n    </li>\n                </ol>\n              </div>\n            </div>\n            <p>\n              After applying the second round of feedback I received from user testing, I created the final version to the right on the image above. I made changes such as moving the event date underneath the session number, and removing redundant information like the session titles  (e.g. “Session IV” is unnecessary if there is already a “4” next to the text container indicating the session number). \n            </p>\n            <h2 id=\"reflection\">Reflection</h2>\n            <p>\n              Overall from this project, I learned that <strong> contrast and consistency of alignment </strong> are essential to establishing a clear hierarchical flow for information and visual design. This design project provided a challenge where I had to juggle user needs, such as the readability of all the provided information. I also learned that despite having to sacrifice the prominence of certain elements (e.g. session information) through reducing font sizes and less favorable locations, it was still important to do so to highlight and draw attention to more important elements (e.g. title) to <strong> reduce cognitive load and thus time on the user’s behalf </strong> in making a more readable and usable product.\n            </p>\n            <img className=\"project-image-half lightbox center\" src={AGFinalProduct} onClick={() => this.setState({ isLightboxOpen: true, photoIndex: 6 })}/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AvantGarde","import React, { Component } from 'react'\nimport Lightbox from \"react-image-lightbox\";\n\nimport SideNavbar from '../SideNavbar'\nimport CCBanner from '../../images/cc-banner.png'\nimport CCFrameSetA from '../../images/cc-frame-set-a.png'\nimport CCFrameSetB from '../../images/cc-frame-set-b.png'\nimport CCFrameSetC from '../../images/cc-frame-set-c.png'\nimport CCGoogleAnalytics from '../../images/cc-google-analytics.png';\nimport CCStoryboard1 from '../../images/cc-storyboard-1.png'\nimport CCStoryboard2 from '../../images/cc-storyboard-2.png'\nimport CCCareerFair from '../../images/cc-ucsd-career-fair.jpg'\nimport CCUserTestingFlow from '../../images/cc-user-testing-flow.png'\nimport CCFinalDesign from '../../images/cc-final-design.png';\nimport CCFinalPhone from '../../images/cc-final-phone.jpg';\nimport CCTemplateStyles from '../../images/cc-template-styles.gif';\nimport \"react-image-lightbox/style.css\";\nimport './projects.css'\n\nconst images = [\n  CCCareerFair,\n  CCStoryboard1,\n  CCStoryboard2,\n  CCFrameSetA,\n  CCFrameSetB,\n  CCFrameSetC,\n  CCUserTestingFlow,\n  CCGoogleAnalytics,\n  CCFinalDesign,\n  CCFinalPhone\n]\n\nclass CardConnect extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      photoIndex: 0,\n      isLightboxOpen: false,\n      isVersionAOpen: false,\n      isVersionBOpen: false,\n      isRound2Open: false,\n    };\n  }\n\n  render() {\n    const { photoIndex, isLightboxOpen } = this.state;\n    return (\n      <div className=\"big-layout\">\n        <SideNavbar />\n        { isLightboxOpen && (\n          <Lightbox\n            mainSrc={images[photoIndex]}\n            nextSrc={images[(photoIndex + 1) % images.length]}\n            prevSrc={images[(photoIndex + images.length - 1) % images.length]}\n            onCloseRequest={() => this.setState({ isLightboxOpen: false })}\n            onMovePrevRequest={() =>\n              this.setState({\n                photoIndex: (photoIndex + images.length - 1) % images.length\n              })\n            }\n            onMoveNextRequest={() =>\n              this.setState({\n                photoIndex: (photoIndex + 1) % images.length\n              })\n            }\n          />\n        )}\n        <div className=\"layout\">\n          <div className=\"blue-banner\">\n            <img className=\"banner\" src={CCBanner}/>\n          </div>\n          <div className=\"project-content\">\n          <div className=\"project-title\">CardConnect</div>\n          <div className=\"project-subtitle\">UC San Diego (COGS 120 - Interaction Design)</div>\n            <p><strong>Scope:</strong> frontend development, user interface design, user research</p>\n            <p><strong>Tools:</strong> HTML/CSS, Node.js, Figma, Heroku, Google Analytics, Adobe Illustrator</p>\n            <p><strong>Timeline:</strong> January 2019 to March 2019</p>\n            <h2 id=\"overview\">Background</h2>\n            <p>\n              For student job-seekers, waiting to hear back from recruiters after standing \n              in line for hours on hours in career fairs can be a nightmare—especially \n              if they doesn’t have the contact information of the recruiter whom they \n              spoke to for one of their dream companies that they stood in line for an \n              aching half-hour. Once they’ve waited their turn in line, student \n              job seekers have to quickly request contact information in the form of \n              emails or business cards within their limited conversation time frames \n              with recruiters; otherwise, they would have no control but to await the greatly \n              feared outcome—being ghosted. On the flip side, imagine if you were a \n              recruiter or hiring manager—if you have a business card, how often do \n              you give it out knowing full well that it’ll more likely than not end \n              up in the landfill?\n            </p>\n\n            <h2>Needfinding</h2>\n            <p>\n              We shadowed students at the UCSD Winter career fair, and noticed that about \n              <strong> 1 in 20 students </strong> asked recruiters for follow-up contact information, such \n              as business cards or a recruiter’s email. We also noticed that about <strong> 1 in \n              6 recruiters </strong> brought business cards with them. Students mentioned that the \n              <strong> business cards would eventually get lost, crumpled, or destroyed with laundry </strong>\n              after students shoved them into pockets. Even if more students were to ask \n              for contact information, the only viable way would be to ask for the recruiter’s \n              email,<strong> while feeling pressured to hurry with the growing line behind them.</strong> \n              Students had concerns about not remembering the recruiters’ names with \n              only emails written down, and were also afraid of asking recruiters for their \n              names again lest recruiters thought they were rude to not pay attention to \n              introductions at the beginning of their conversations.\n              <br/><br/>\n            </p>\n            <img className=\"project-image-half center lightbox\" src={CCCareerFair} onClick={() => this.setState({ isLightboxOpen: true, photoIndex: 0 })}/>\n            <p className=\"center\"><i>Image of UCSD Career Fair courtesy of <a href=\"https://images.app.goo.gl/kWkXDKQ8GL1sCS4Q7\" target=\"_blank\"> Glassdoor</a></i></p>\n            \n            <h2>Problem Statement</h2>\n            <p>\n              As a result of our needfinding process, we identified our target problem:\n              <br/><br/>\n              <strong><i>Student job-seekers need a quick way to record recruiter contact information \n              at conferences and career fairs so that they can later contact recruiters to \n              obtain more transparent updates on their job application process.</i></strong>\n            </p>\n\n            <h2>Storyboarding</h2>\n            <p>\n              We began to explore potential solutions to our problem statement by creating \n              storyboards. We decided that storyboards were a low time-commitment and low-cost\n              method of presenting solution concepts to users for further user research, to \n              prevent ourselves from becoming too entrenched with ideas that might not address\n              user needs carefully.\n            </p>\n\n            <h3 className=\"no-bottom-margin\">Storyboard 1 - Sharing digital business cards</h3>\n            <img className=\"project-image-full lightbox\" src={CCStoryboard1} onClick={() => this.setState({ isLightboxOpen: true, photoIndex: 1 })}/>\n            <p>\n              In this storyboard, users create a dynamically updated digital business card \n              stored within a contact list synced to their user accounts on the platform. \n              We liked this idea because the digital business cards could convey uniqueness\n              of each individual through the <strong> preservation of the styled formatting </strong>  of \n              traditional physical business cards. However, a drawback to this concept \n              was that <strong> users could be frustrated with having to find contact information </strong> \n              elements by sifting through inconsistent locations of emails, phone numbers, \n              and company names across all the uniquely styled business cards.\n            </p>\n            <h3 className=\"no-bottom-margin\">Storyboard 2 - Note taking-based networking</h3>\n            <img className=\"project-image-full lightbox\" src={CCStoryboard2} onClick={() => this.setState({ isLightboxOpen: true, photoIndex: 2 })}/>\n            <p>Through note taking, a benefit for users was that they could <strong>autonomously record \n              tidbits of information unique to conversations</strong> they had with whoever they were\n              networking with. However, users noted that the hasty notes they take would be \n              <strong> likely disorganized </strong> without structured input locations. On top of this, users <strong>might\n              not need all the information </strong> from their discussions. This approach would also draw \n              attention away from maintaining good eye contact with the people they were talking \n              to; otherwise if the users were to write down information quickly after they conversed\n              with someone, they might run into other people to talk to right after as well, and \n              would not be able to comprehensively record the contents of their conversations.\n            </p>\n\n            <h2>Prototyping</h2>\n            <p>From our storyboards insights, we decided to combine the <strong>best parts of each \n              approach </strong> into a new potential solution to create an initial paper prototype \n              with. In this prototype, users could design styled business cards with contact\n              information listed in a structured format below the styled card image, to \n              make it easy for users to locate contact information elements in an\n              organized manner. This prototype also allows users to optionally fill\n              in short notes.\n            </p>\n            <iframe className=\"center\" width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/tXHjtgFhXDc\" \n              frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" \n              allowfullscreen=\"true\">\n            </iframe>\n\n            <h2>Wireframing</h2>\n            <p>\n              After having explored the tangible realm of possibilities that our paper prototype \n              allowed us to experience, we used it to guide our wireframe creation process. \n              We created three sets of frames: one for the contacts list, one for capturing an \n              image of a business card, and one for using styled templates to create a contact \n              card.\n            </p>\n\n            <h3>Frame Set A - Contacts List</h3>\n            <p>\n              This is the home page where users can quickly search up an existing contact or create a new contact.\n            </p>\n            <img className=\"project-image-full lightbox\" src={CCFrameSetA} onClick={() => this.setState({ isLightboxOpen: true, photoIndex: 3 })}/>\n            <h3>Frame Set B - Capture image of a physical business card</h3>\n            <p>\n              We also wanted to provide users with the option to quickly snap and store a picture of an existing business card.\n            </p>\n            <img className=\"project-image-full lightbox\" src={CCFrameSetB} onClick={() => this.setState({ isLightboxOpen: true, photoIndex: 4 })}/>\n            <h3>Frame Set C - Use styled templates or captured image to create contact card</h3>\n            <p>\n              This is the page where users view an image of a business card along with a structured list of contact information elements (phone, company, email, etc).\n            </p>\n            <img className=\"project-image-full lightbox\" src={CCFrameSetC} onClick={() => this.setState({ isLightboxOpen: true, photoIndex: 5 })}/>\n            <p className=\"center\">Here are some of the <strong>templated business card styles</strong> in we used on Frame Set C:</p>\n            <img className=\"project-image-half center\" src={CCTemplateStyles}/>\n            <h2>User Testing</h2>\n            <img className=\"project-image-full lightbox\" src={CCUserTestingFlow} onClick={() => this.setState({ isLightboxOpen: true, photoIndex: 6 })}/>\n            <p>\n              Using our wireframes, we built a <strong> functional web application </strong> hosted on Heroku to conduct user testing \n              for our progress so far. We developed a testing guide with tasks for our users to \n              complete, where we asked users to show us how they would create, edit, and delete \n              a card and how they would search for a contact.\n              <br/><br/>\n              We were curious about whether users would prefer that the add button on the \n              Contact List page in Frame Set A link to Frame Set B (so that they could \n              immediately take a picture first) or Frame Set C (so that they could enter \n              the name of a person first). To find out, we ran an <strong> A/B testing experiment </strong>\n              using Google Analytics on 26 sessions, where users had a 50% chance of landing \n              on either frame set. After running this experiment, we saw that the bounce rate \n              of the add button linking to <strong> Frame Set B (titled New B in the image) had a  higher \n              bounce rate </strong> than did for Frame Set C (titled New A in the image)—25% compared to \n              7.14%. Using this metric, it appeared that users preferred to type their own labels \n              first onto a contact card than to snap an image of the card without labelling what \n              the card was for first. As a result, we decided to link the plus button directly \n              to the contact card creation page.\n            </p>\n            <img className=\"project-image-full lightbox\" src={CCGoogleAnalytics} onClick={() => this.setState({ isLightboxOpen: true, photoIndex: 7 })}/>\n            \n            <h2>Final Design</h2>\n            <p>We applied our findings from conducting user testing and our Google Analytics experiment to create the final version below.</p>\n            <img className=\"project-image-full center lightbox\" src={CCFinalDesign} onClick={() => this.setState({ isLightboxOpen: true, photoIndex: 8 })}/>\n\n            <h2>Reflection</h2>\n            <p>\n              Although something as simple as making sure that we don’t lose a business \n              card may seem like a trivial issue, we realized that it was still crucial \n              to address this problem of being able to better preserve important \n              information that may lead to the next step in our career and change our \n              futures. I learned to work with my team, as we discussed each of our \n              perspectives throughout the iterative process of creating CardConnect. \n              I also learned that needfinding and user testing really helps drive the \n              core direction of a product to better serve a product’s user base. \n              In the future, I’d like to continue to explore how details however small, \n              such as the ordering of a product’s interactive flow, can affect how a user’s \n              perception of the product and how to better align a product according to \n              user needs through interaction design.\n            </p>\n            <div className=\"row\">\n              <div className=\"column-2\">\n                <img className=\"project-image-full center lightbox\" src={CCFinalPhone} onClick={() => this.setState({ isLightboxOpen: true, photoIndex: 9 })}/>\n              </div>\n            </div>\n            \n            \n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default CardConnect","import React, { Component } from 'react'\nimport SideNavbar from '../SideNavbar'\n\nclass AvantGarde extends Component {\n  render() {\n    return (\n      <div>\n        Work in progress. Check back next week!\n      </div>\n    );\n  }\n}\n\nexport default AvantGarde","import React, { useEffect } from 'react';\nimport { Route } from 'react-router-dom'\nimport '../App.css';\nimport Home from './Home';\nimport AvantGarde from './projects/AvantGarde';\nimport CardConnect from './projects/CardConnect';\nimport Informed from './projects/Informed';\nimport createHistory from 'history/createBrowserHistory'\nimport ReactGA from 'react-ga'\n\nconst history = createHistory();\nhistory.listen(location => {\n\tReactGA.set({ page: location.pathname })\n\tReactGA.pageview(location.pathname)\n})\n\nfunction App() {\n    useEffect(() => {\n        ReactGA.pageview(window.location.pathname);\n    })\n\n    return (\n      <>\n        <Route exact path='/' component={Home}/>\n        <Route path='/projects/cardconnect' component={CardConnect}/>\n        <Route path='/projects/avantgarde' component={AvantGarde}/>\n        <Route path='/projects/informed' component={Informed}/>\n      </>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport { render } from 'react-dom'\n\nimport { HashRouter } from 'react-router-dom'\nimport ReactGA from 'react-ga'\n\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactGA.initialize('UA-123523596-1');\n\nrender((\n  <HashRouter>\n    <App />\n  </HashRouter>\n  ), document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}